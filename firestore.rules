rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Récupérer le rôle de l'utilisateur depuis le document user
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    function isModerator() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'moderateur' ||
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'vendeur';
    }

    // Règles pour les commandes
    match /orders/{orderId} {
      allow read: if request.auth != null && (
        isAdmin() ||
        isModerator() ||
        request.auth.uid == resource.data.userId
      );
      allow write: if request.auth != null && (
        isAdmin() ||
        request.auth.uid == resource.data.userId
      );
    }

    // Règles pour les profils utilisateurs
    match /users/{userId} {
      allow read: if request.auth != null && (
        isAdmin() ||
        request.auth.uid == userId
      );
      allow write: if request.auth != null && (
        isAdmin() ||
        request.auth.uid == userId
      );
      allow list: if request.auth != null && isAdmin();
    }

    // Règles pour les produits
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }

    // Règles pour les catégories
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
      allow list: if true;
    }

    // Règles pour les annonces
    match /announcements/{announcementId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }
  }
} 